# default code chunk options
knitr::opts_chunk$set(echo = T,
results = 'markup',
message = F,
warning = F,
fig.width = 4,
fig.height = 3,
fig.align = 'center')
# load packages
library(faraway)
library(tidyverse)
library(modelr)
p <- ggplot(eco, aes(x = usborn, y = income)) +
geom_point() +
labs(x = 'Percentage of state population born in U.S.',
y = 'Per capita income in 1998 (USD)')
p + geom_smooth(method = 'lm', formula = 'y ~ poly(x, 3)', se = F)
p <- ggplot(eco, aes(x = usborn, y = income)) +
geom_point() +
labs(x = 'Percentage of state population born in U.S.',
y = 'Per capita income in 1998 (USD)')
p + geom_smooth(method = 'lm', formula = 'y ~ poly(x, 3)', se = F)
# unique values of usborn
data_grid(eco, usborn = usborn) %>% head()
# equivalent results
unique(eco$usborn) %>% sort()
data_grid(eco, usborn = usborn) %>% pull(usborn)
# store prediction grid
pred_df_eco <- eco %>%
data_grid(usborn = usborn, .model = fit_eco) %>%
add_predictions(model = fit_eco)
# model to visualize
fit_eco <- lm(income ~ poly(usborn, 3), data = eco)
# prediction grid
eco %>%
data_grid(usborn = usborn,
.model = fit_eco) %>%
head()
# append predictions
eco %>%
data_grid(usborn = usborn, .model = fit_eco) %>%
add_predictions(model = fit_eco) %>%
head()
# store prediction grid
pred_df_eco <- eco %>%
data_grid(usborn = usborn, .model = fit_eco) %>%
add_predictions(model = fit_eco)
# plot path
p + geom_path(aes(y = pred), data = pred_df_eco)
# compare with geom_smooth()
p + geom_smooth(method = 'lm', formula = 'y ~ poly(x, 3)', se = F)
# store prediction grid
pred_df_eco <- eco %>%
data_grid(usborn = usborn, .model = fit_eco) %>%
add_predictions(model = fit_eco)
# plot path
p + geom_path(aes(y = pred), data = pred_df_eco)
# these are equivalent
seq_range(eco$usborn, 5)
seq(from = min(eco$usborn),
to = max(eco$usborn),
length = 5)
